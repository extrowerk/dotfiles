# Example HaikuPorts configuration
#
# =============
# Installation:
#   1) cp haikuports-sample.conf ~/config/settings/haikuports.conf
#
#   2) customize your settings:
#      lpe ~/config/settings/haikuports.conf

# ==================
# Tip:
#
# Put this into your ~/config/settings/profile to search for a string in all
# recipes with "inrecipe {searchstring}" and build a package with
# "hp {packagename}" (adjust your /path/to/your/haikuports/):
#
#	function inrecipe { grep -n $1 /path/to/your/haikuports/*/*/*.recipe; }
#	export -f inrecipe
#
#	alias hp="haikuporter -S -j8 --get-dependencies --no-source-packages"

# ==================
# Required settings:
#

# --------------
# TREE_PATH:
#     The full path to your cloned haikuports tree.
TREE_PATH="/Ports/haikuports"

# --------------
# PACKAGER:
#     Your name and email
PACKAGER="miqlas <miqlas@gmail.com>"

# ==================
# Optional settings:

# --------------
# ALLOW_UNTESTED:
#     Allow build of untested recipes. '?x86' for example
ALLOW_UNTESTED="yes"

# --------------
# ALLOW_UNSAFE_SOURCES:
#     Allow building from unsafe sources. Setting this to yes allows
#     downloading sources for which there is no possibility to check if they
#     have been corrupted or tampered with.
#
#     Only set this to yes if you really need this and know what you're doing,
#     for example if you want to build recipes for development versions that
#     fetch the head from a repository.
ALLOW_UNSAFE_SOURCES="yes"

# --------------
# TARGET_ARCHITECTURE:
#     The primary architectures you wish to compile recipes for.
#     Defaults to the current primary platform.
TARGET_ARCHITECTURE="x86_64"

# --------------
# SECONDARY_TARGET_ARCHITECTURES:
#     Secondary platforms you wish to build packages for.
#     Example is x86 (gcc4) packages on a x86_gcc2 (gcc2) system
#     Default is no secondary target architectures.
#SECONDARY_TARGET_ARCHITECTURES="x86_64"
